# Copyright (c) 2018, Red Hat, Inc.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#

- name: Build list of enabled providers
  set_fact: storage_enabled_providers="{{ storage_enabled_providers | default([])}} + [ '{{ item.provider | default(\'cinderlib\') }}' ]"
  with_list: "{{ storage_backends.values() | list | mandatory }}"

- name: Remove duplicates from enabled providers
  set_fact: storage_enabled_providers="{{ storage_enabled_providers | unique | list }}"

- name: Setup providers
  include_tasks: "setup_{{ item }}.yml"
  vars:
    provider_config: "{{ lookup('oneof', 'storage_' + item + '_config', 'storage_' + item + '_config_defaults') }}"
  with_list: "{{ storage_enabled_providers }}"
  when: storage_setup_providers

- name: Initialize backends
  storage:
    resource: backend
    state: present
    provider: "{{ backend.value.provider | default('cinderlib') }}"
    backend: "{{ backend.key }}"
    backend_config: "{{ backend.value }}"
    # Can't use vars lookup in case Ansible version < 2.5
    provider_config: "{{ lookup('oneof', 'storage_' + (backend.value.provider | default('cinderlib')) + '_config', 'storage_' + (backend.value.provider | default('cinderlib')) + '_defaults') }}"
    consumer_config: "{{ lookup('oneof', 'storage_' + (backend.value.provider | default('cinderlib')) + '_consumer_config', 'storage_' + (backend.value.provider | default('cinderlib')) + '_consumer_defaults') }}"

  with_dict: "{{ storage_backends }}"
  loop_control:
    loop_var: backend
