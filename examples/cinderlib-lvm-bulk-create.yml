# Copyright (c) 2018, Red Hat, Inc.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#
#
---
# Setup the "Storage backend" which is an LVM VG
# If we were using a real storage array this wouldn't be necessary
- hosts: storage_controller
  vars:
    cldir: /home/vagrant/cinderlib
    vg: cinder-volumes
  tasks:
      - include_tasks: _create_lvm_backend.yml

# Configure the LVM backend on our controller node
- hosts: storage_controller
  vars:
    storage_backends:
        lvm:
            volume_driver: 'cinder.volume.drivers.lvm.LVMVolumeDriver'
            volume_group: 'cinder-volumes'
            iscsi_protocol: 'iscsi'
            iscsi_helper: 'lioadm'
  roles:
      - { role: storage, node_type: controller }

- hosts: storage_consumers
  vars:
      num_disks: 50
  roles:
      - { role: storage, node_type: consumer }
  tasks:
      - name: "Create {{ num_disks }} volumes"
        storage:
            resource: volume
            state: present
            name: "mydisk{{ item }}"
            size: 1
        with_sequence: start=1 end={{ num_disks }}

      - name: Delete all volumes
        storage:
            resource: volume
            state: absent
            name: "mydisk{{ item }}"
        with_sequence: start=1 end={{ num_disks }}
